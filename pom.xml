<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.hemajoo</groupId>
    <artifactId>hemajoo-icons</artifactId>
    <version>0.1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Hemajoo Icons Parent</name>
    <description>Hemajoo icon collections parent project.</description>

    <modules>
        <module>hemajoo-icons-idea</module>
    </modules>

    <developers>

        <developer>
            <id>ressec</id>
            <roles>
                <role>Lead Developer</role>
            </roles>
            <name>Resse Christophe</name>
            <url>https://github.com/hemajoo</url>
            <email>christophe.resse@gmail.com</email>
        </developer>

    </developers>

    <scm>
        <url>https://github.com/hemajoo/hemajoo-icons</url>
        <connection>scm:git:ssh://git@github.com/hemajoo/hemajoo-icons.git</connection>
        <!--suppress UnresolvedMavenProperty -->
        <developerConnection>scm:git:[push=]ssh://git@github.com/hemajoo/hemajoo.git[fetch=]ssh://git@github.com/hemajoo/hemajoo-icons.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <properties>

        <!-- Project properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.directory.benchmark>file://${basedir}/benchmark}</project.directory.benchmark>
        <project.directory.run>${basedir}/run</project.directory.run>
        <project.directory.data>${basedir}/data</project.directory.data>
        <project.directory.log>${basedir}/log</project.directory.log>
        <project.directory.db>${basedir}/db</project.directory.db>
        <test.pattern.unit>**/*UnitTest.java</test.pattern.unit>
        <test.pattern.integration>**/*IntegrationTest.java</test.pattern.integration>

        <!-- Spring  properties -->
        <version.spring.boot>2.7.4</version.spring.boot>
        <version.javafx>19</version.javafx>

        <!-- Maven plugins version properties. -->
        <version.maven.plugin.compiler>3.10.1</version.maven.plugin.compiler>
        <version.maven.plugin.jar>3.2.2</version.maven.plugin.jar>
        <version.maven.plugin.javadoc>3.4.0</version.maven.plugin.javadoc>
        <version.maven.plugin.source>3.2.1</version.maven.plugin.source>
        <version.maven.plugin.scm>2.0.0-M1</version.maven.plugin.scm>
        <version.maven.plugin.release>3.0.0-M5</version.maven.plugin.release>
        <version.maven.plugin.site>3.11.0</version.maven.plugin.site>
        <version.maven.plugin.project.info.reports>3.2.2</version.maven.plugin.project.info.reports>
        <version.maven.plugin.surefire>3.0.0-M5</version.maven.plugin.surefire>
        <version.maven.plugin.failsafe>3.0.0-M5</version.maven.plugin.failsafe>
        <version.maven.plugin.flyway>8.5.2</version.maven.plugin.flyway>
        <version.plugin.maven.docker>0.37.0</version.plugin.maven.docker>
        <version.plugin.maven.sonarscource.scanner>3.9.1.2184</version.plugin.maven.sonarscource.scanner>
        <version.plugin.maven.jacoco>0.8.8</version.plugin.maven.jacoco>
        <version.plugin.maven.javafx>0.0.8</version.plugin.maven.javafx>

        <!-- Dependencies version properties -->
        <version.springdoc.openapi>1.6.6</version.springdoc.openapi>
        <version.google.guava>31.1-jre</version.google.guava>
        <version.junit.jupiter>5.9.1</version.junit.jupiter>
        <version.junit.platform.launcher>1.9.1</version.junit.platform.launcher>
        <version.datafaker>1.6.0</version.datafaker>
        <version.apache.commons.lang.3>3.9</version.apache.commons.lang.3>
        <version.apache.commons.io>2.11.0</version.apache.commons.io>
        <version.lombok>1.18.24</version.lombok>
        <version.assertj>3.23.1</version.assertj>
        <version.hemajoo>0.2.0-SNAPSHOT</version.hemajoo>

        <!-- Sonar properties -->
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/../hemajoo-coverage/target/site/jacoco-aggregate/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <sonar.language>java</sonar.language>
        <sonar.java.libraries>target/classes</sonar.java.libraries>
        <sonar.organization>hemajoo</sonar.organization>
        <sonar.projectKey>${project.groupId}:${project.artifactId}</sonar.projectKey>
        <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
        <sonar.projectName>Hemajoo Icons Library</sonar.projectName>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.exclusions>**/resources/media/**/*,**/target/site/**/*,**/target/classes/media/**/*,**/apidocs/**/*,**/test/resources/**/*.jar,**/test-classes/media/**/*</sonar.exclusions>
        <sonar.coverage.exclusions>**/test/java/**/*</sonar.coverage.exclusions>
        <sonar.java.binaries>target/classes/</sonar.java.binaries>
        <sonar.java.libraries>**/target/dependency/*.jar</sonar.java.libraries>

    </properties>

    <distributionManagement>

        <!-- Used to deploy in the Hemajoo PRIVATE maven registry -->
<!--        <snapshotRepository>-->
<!--            <id>s3.hemajoo</id> &lt;!&ndash; Must match one entry in the server section with the same id &ndash;&gt;-->
<!--            <name>AWS Hemajoo Maven Registry (Snapshots)</name>-->
<!--            <url>s3://maven.hemajoo/snapshots</url>-->
<!--        </snapshotRepository>-->
<!--        <repository>-->
<!--            <id>s3.hemajoo</id> &lt;!&ndash; Must match one entry in the server section with the same id &ndash;&gt;-->
<!--            <name>AWS Hemajoo Maven Registry (Releases)</name>-->
<!--            <url>s3://maven.hemajoo/releases</url>-->
<!--        </repository>-->

        <!-- Used to deploy in the Hemajoo PUBLIC maven registry -->
        <snapshotRepository>
            <id>s3.hemajoo-public</id> <!-- Must match one entry in the server section with the same id -->
            <name>AWS Hemajoo - Public Maven Registry (Snapshots)</name>
            <url>s3://maven.hemajoo-public/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>s3.hemajoo-public</id> <!-- Must match one entry in the server section with the same id -->
            <name>AWS Hemajoo - Public Maven Registry (Releases)</name>
            <url>s3://maven.hemajoo-public/releases</url>
        </repository>

    </distributionManagement>

    <repositories>

        <!-- Maven Central repository -->
        <repository>
            <id>central</id>
            <name>Maven Central</name>
            <url>https://repo.maven.apache.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

<!--        &lt;!&ndash; Hemajoo PRIVATE Maven registry for Snapshots &ndash;&gt;-->
<!--        <repository>-->
<!--            <id>s3.hemajoo.snapshots</id> &lt;!&ndash; Must match one entry in the server section with the same id &ndash;&gt;-->
<!--            <name>AWS Hemajoo - Private Maven Registry (Snapshots)</name>-->
<!--            <url>s3://maven.hemajoo/snapshots</url>-->
<!--            <snapshots>-->
<!--                <enabled>true</enabled>-->
<!--            </snapshots>-->
<!--            <releases>-->
<!--                <enabled>false</enabled>-->
<!--            </releases>-->
<!--        </repository>-->
<!--        &lt;!&ndash; Hemajoo PRIVATE Maven registry for Releases &ndash;&gt;-->
<!--        <repository>-->
<!--            <id>s3.hemajoo.releases</id> &lt;!&ndash; Must match one entry in the server section with the same id &ndash;&gt;-->
<!--            <name>AWS Hemajoo - Private Maven Registry (Releases)</name>-->
<!--            <url>s3://maven.hemajoo/releases</url>-->
<!--            <snapshots>-->
<!--                <enabled>false</enabled>-->
<!--            </snapshots>-->
<!--            <releases>-->
<!--                <enabled>true</enabled>-->
<!--            </releases>-->
<!--        </repository>-->

        <!-- Hemajoo PUBLIC Maven registry for Snapshots -->
        <repository>
            <id>s3.hemajoo-public.snapshots</id> <!-- Must match one entry in the server section with the same id -->
            <name>AWS Hemajoo - Public Maven Registry (Snapshots)</name>
            <url>s3://maven.hemajoo-public/snapshots</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
        <!-- Hemajoo PUBLIC Maven registry for Releases -->
        <repository>
            <id>s3.hemajoo-public.releases</id> <!-- Must match one entry in the server section with the same id -->
            <name>AWS Hemajoo - Public Maven Registry (Releases)</name>
            <url>s3://maven.hemajoo-public/releases</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>

    </repositories>

    <dependencyManagement>

        <dependencies>

            <!-- JUnit Jupiter (Junit 5) -->
<!--            <dependency>-->
<!--                <groupId>org.junit.platform</groupId>-->
<!--                <artifactId>junit-platform-launcher</artifactId>-->
<!--                <version>${version.junit.platform.launcher}</version>-->
<!--                <scope>test</scope>-->
<!--            </dependency>-->

<!--            <dependency>-->
<!--                <groupId>org.junit.jupiter</groupId>-->
<!--                <artifactId>junit-jupiter</artifactId>-->
<!--                <version>${version.junit.jupiter}</version>-->
<!--                <scope>test</scope>-->
<!--            </dependency>-->

<!--            <dependency>-->
<!--                <groupId>org.assertj</groupId>-->
<!--                <artifactId>assertj-core</artifactId>-->
<!--                <version>${version.assertj}</version>-->
<!--                <scope>test</scope>-->
<!--            </dependency>-->

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${version.lombok}</version>
            </dependency>

        </dependencies>

    </dependencyManagement>

    <build>

        <extensions>

            <extension>
                <groupId>com.gkatzioura.maven.cloud</groupId>
                <artifactId>s3-storage-wagon</artifactId>
                <version>2.3</version>
            </extension>

        </extensions>

        <plugins>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${version.spring.boot}</version>
            </plugin>

            <!-- JAR: Compile the sources. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.maven.plugin.compiler}</version>
                <configuration>
                    <annotationProcessorPaths>
                        <annotationProcessorPath>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${version.lombok}</version>
                        </annotationProcessorPath>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <!-- JAR: Create a jar of the test classes. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${version.maven.plugin.jar}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- JAVADOC: Used to generate the Javadoc JAR file. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${version.maven.plugin.javadoc}</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <docencoding>${project.build.sourceEncoding}</docencoding>
                    <charset>${project.build.sourceEncoding}</charset>
                    <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
                    <sourceFileExcludes>
                        <exclude>**/*Impl.java</exclude>
                    </sourceFileExcludes>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- SOURCE: Used to generate the sources JAR file. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${version.maven.plugin.source}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- SCM: Used to perform Source Control Management actions with Maven. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-plugin</artifactId>
                <version>${version.maven.plugin.scm}</version>
            </plugin>

            <!-- RELEASE: Used to release a project with Maven. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${version.maven.plugin.release}</version>
                <configuration>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <useReleaseProfile>false</useReleaseProfile>
                </configuration>
            </plugin>

            <!-- SITE: The Site Plugin is used to generate a site for the project. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${version.maven.plugin.site}</version>
            </plugin>

            <!-- INFO REPORTS: The Maven Project Info Reports plugin is used to generate reports information about the project. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${version.maven.plugin.project.info.reports}</version>
            </plugin>

            <!-- JACOCO: Java Code Coverage. -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${version.plugin.maven.jacoco}</version>
            </plugin>

            <!-- SONAR: The Maven Project Sonar plugin is used to execute static analysis on the code. -->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${version.plugin.maven.sonarscource.scanner}</version>
            </plugin>

            <!-- SUREFIRE: The Maven Project Surefire plugin is used to execute the tests. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.maven.plugin.surefire}</version>
                <configuration>
                    <includes>
                        <include>**/*UnitTest.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- FAILSAFE: For integration tests. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${version.maven.plugin.failsafe}</version>
                <configuration>
                    <includes>
                        <include>**/*IntegrationTest.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/*UnitTest.java</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>antrun-plugin</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo>'sonar.coverage.jacoco.xmlReportPaths': ${sonar.coverage.jacoco.xmlReportPaths}</echo>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>

            <!-- Allow resource filtering for variable substitution -->
            <resource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

    </build>


    <profiles>

        <profile>
            <id>java.8</id>
            <properties>
                <maven.compiler.release>8</maven.compiler.release>
            </properties>
        </profile>

        <profile>
            <id>java.9</id>
            <properties>
                <maven.compiler.release>9</maven.compiler.release>
            </properties>
        </profile>

        <profile>
            <id>java.11</id>
            <properties>
                <maven.compiler.release>11</maven.compiler.release>
            </properties>
        </profile>

        <profile>
            <id>java.13</id>
            <properties>
                <maven.compiler.release>13</maven.compiler.release>
            </properties>
        </profile>

        <profile>
            <id>java.15</id>
            <properties>
                <maven.compiler.release>15</maven.compiler.release>
            </properties>
        </profile>

        <profile>
            <id>java.16</id>
            <properties>
                <maven.compiler.release>16</maven.compiler.release>
            </properties>
        </profile>

        <profile>
            <id>java.17</id>
            <properties>
                <maven.compiler.release>17</maven.compiler.release>
            </properties>
        </profile>

    </profiles>

</project>
